{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Downloading data from https://www.cs.toronto.edu/~kriz/cifar-10-python.tar.gz\n",
      "170500096/170498071 [==============================] - 443s 3us/step\n"
     ]
    }
   ],
   "source": [
    "from tensorflow.keras.datasets import cifar10\n",
    "import numpy as np\n",
    "\n",
    "(x_train, y_train), (x_test, y_test) = cifar10.load_data()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(50000, 32, 32, 3)"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x_train.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[[ 59,  62,  63],\n",
       "        [ 43,  46,  45],\n",
       "        [ 50,  48,  43],\n",
       "        ...,\n",
       "        [158, 132, 108],\n",
       "        [152, 125, 102],\n",
       "        [148, 124, 103]],\n",
       "\n",
       "       [[ 16,  20,  20],\n",
       "        [  0,   0,   0],\n",
       "        [ 18,   8,   0],\n",
       "        ...,\n",
       "        [123,  88,  55],\n",
       "        [119,  83,  50],\n",
       "        [122,  87,  57]],\n",
       "\n",
       "       [[ 25,  24,  21],\n",
       "        [ 16,   7,   0],\n",
       "        [ 49,  27,   8],\n",
       "        ...,\n",
       "        [118,  84,  50],\n",
       "        [120,  84,  50],\n",
       "        [109,  73,  42]],\n",
       "\n",
       "       ...,\n",
       "\n",
       "       [[208, 170,  96],\n",
       "        [201, 153,  34],\n",
       "        [198, 161,  26],\n",
       "        ...,\n",
       "        [160, 133,  70],\n",
       "        [ 56,  31,   7],\n",
       "        [ 53,  34,  20]],\n",
       "\n",
       "       [[180, 139,  96],\n",
       "        [173, 123,  42],\n",
       "        [186, 144,  30],\n",
       "        ...,\n",
       "        [184, 148,  94],\n",
       "        [ 97,  62,  34],\n",
       "        [ 83,  53,  34]],\n",
       "\n",
       "       [[177, 144, 116],\n",
       "        [168, 129,  94],\n",
       "        [179, 142,  87],\n",
       "        ...,\n",
       "        [216, 184, 140],\n",
       "        [151, 118,  84],\n",
       "        [123,  92,  72]]], dtype=uint8)"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x_train[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "training_data = []\n",
    "\n",
    "%matplotlib inline\n",
    "from PIL import Image, ImageFile\n",
    "from matplotlib.pyplot import imshow\n",
    "import requests\n",
    "import numpy as np\n",
    "from io import BytesIO\n",
    "from IPython.display import display, HTML\n",
    "\n",
    "IMAGE_WIDTH = 200\n",
    "IMAGE_HEIGHT = 200\n",
    "IMAGE_CHANNELS = 3\n",
    "\n",
    "images = [\n",
    "    \"https://upload.wikimedia.org/wikipedia/commons/9/92/Brookings.jpg\",\n",
    "    \"https://upload.wikimedia.org/wikipedia/commons/f/ff/WashU_Graham_Chapel.JPG\",\n",
    "    \"https://upload.wikimedia.org/wikipedia/commons/9/9e/SeigleHall.jpg\",\n",
    "    \"https://upload.wikimedia.org/wikipedia/commons/a/aa/WUSTLKnight.jpg\",\n",
    "    \"https://upload.wikimedia.org/wikipedia/commons/3/32/WashUABhall.jpg\",\n",
    "    \"https://upload.wikimedia.org/wikipedia/commons/c/c0/Brown_Hall.jpg\",\n",
    "    \"https://upload.wikimedia.org/wikipedia/commons/f/f4/South40.jpg\"    \n",
    "]\n",
    "\n",
    "\n",
    "def make_square(img):\n",
    "    cols,rows = img.size\n",
    "    \n",
    "    if rows>cols:\n",
    "        pad = (rows-cols)/2\n",
    "        img = img.crop((pad,0,cols,cols))\n",
    "    else:\n",
    "        pad = (cols-rows)/2\n",
    "        img = img.crop((0,pad,rows,rows))\n",
    "    \n",
    "    return img\n",
    "        \n",
    "for url in images:\n",
    "    ImageFile.LOAD_TRUNCATED_IMAGES = False\n",
    "    response = requests.get(url)\n",
    "    img = Image.open(BytesIO(response.content))\n",
    "    img.load()\n",
    "    img = make_square(img)\n",
    "    img = img.resize((IMAGE_WIDTH,IMAGE_HEIGHT),Image.ANTIALIAS)\n",
    "    training_data.append(np.asarray(img))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[array([[[112, 161, 203],\n",
       "         [112, 161, 203],\n",
       "         [114, 162, 203],\n",
       "         ...,\n",
       "         [ 86, 121, 162],\n",
       "         [ 49,  85, 130],\n",
       "         [ 76, 113, 154]],\n",
       " \n",
       "        [[106, 158, 203],\n",
       "         [109, 161, 206],\n",
       "         [113, 162, 203],\n",
       "         ...,\n",
       "         [ 75,  95, 125],\n",
       "         [ 67,  87, 124],\n",
       "         [ 24,  38,  73]],\n",
       " \n",
       "        [[108, 159, 205],\n",
       "         [110, 161, 207],\n",
       "         [114, 162, 204],\n",
       "         ...,\n",
       "         [ 82, 108, 136],\n",
       "         [ 50,  80, 115],\n",
       "         [120, 151, 182]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[127,  77,  72],\n",
       "         [125,  80,  69],\n",
       "         [120,  80,  65],\n",
       "         ...,\n",
       "         [ 67,  28,  35],\n",
       "         [ 56,  29,  29],\n",
       "         [ 56,  30,  34]],\n",
       " \n",
       "        [[134,  85,  84],\n",
       "         [130,  88,  78],\n",
       "         [121,  87,  73],\n",
       "         ...,\n",
       "         [ 45,  23,  32],\n",
       "         [ 37,  18,  28],\n",
       "         [ 26,  23,  31]],\n",
       " \n",
       "        [[128,  79,  74],\n",
       "         [127,  84,  77],\n",
       "         [121,  83,  75],\n",
       "         ...,\n",
       "         [ 23,  14,  31],\n",
       "         [ 32,  20,  36],\n",
       "         [ 19,  17,  32]]], dtype=uint8), array([[[140, 132,  11],\n",
       "         [113, 109,   0],\n",
       "         [137, 138,  71],\n",
       "         ...,\n",
       "         [144, 208, 255],\n",
       "         [144, 208, 254],\n",
       "         [144, 209, 254]],\n",
       " \n",
       "        [[168, 160,  12],\n",
       "         [143, 135,  10],\n",
       "         [180, 179, 102],\n",
       "         ...,\n",
       "         [145, 207, 255],\n",
       "         [145, 207, 254],\n",
       "         [145, 209, 254]],\n",
       " \n",
       "        [[141, 136,   3],\n",
       "         [ 94,  98,   3],\n",
       "         [121, 110,  58],\n",
       "         ...,\n",
       "         [146, 208, 254],\n",
       "         [145, 208, 254],\n",
       "         [146, 209, 254]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 19,  20,  16],\n",
       "         [ 12,  17,  11],\n",
       "         [ 15,  10,  10],\n",
       "         ...,\n",
       "         [ 56,  39,  22],\n",
       "         [ 42,  28,  15],\n",
       "         [ 52,  28,  16]],\n",
       " \n",
       "        [[ 18,  21,  10],\n",
       "         [ 11,  15,   6],\n",
       "         [ 10,   6,   9],\n",
       "         ...,\n",
       "         [ 58,  35,  18],\n",
       "         [ 50,  25,  16],\n",
       "         [ 54,  30,  18]],\n",
       " \n",
       "        [[ 14,  16,   9],\n",
       "         [ 11,  13,   8],\n",
       "         [  7,   7,   8],\n",
       "         ...,\n",
       "         [ 46,  32,  16],\n",
       "         [ 51,  31,  16],\n",
       "         [ 52,  31,  16]]], dtype=uint8), array([[[107, 137, 231],\n",
       "         [106, 138, 231],\n",
       "         [110, 135, 233],\n",
       "         ...,\n",
       "         [172, 181, 233],\n",
       "         [175, 183, 233],\n",
       "         [175, 182, 233]],\n",
       " \n",
       "        [[110, 134, 233],\n",
       "         [106, 137, 231],\n",
       "         [108, 137, 231],\n",
       "         ...,\n",
       "         [173, 183, 233],\n",
       "         [175, 185, 233],\n",
       "         [176, 186, 233]],\n",
       " \n",
       "        [[107, 136, 233],\n",
       "         [106, 138, 231],\n",
       "         [106, 136, 232],\n",
       "         ...,\n",
       "         [178, 183, 233],\n",
       "         [178, 185, 233],\n",
       "         [177, 185, 233]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 93,  84,  14],\n",
       "         [102,  92,  20],\n",
       "         [ 82,  81,  13],\n",
       "         ...,\n",
       "         [133, 110,  32],\n",
       "         [136, 111,  33],\n",
       "         [136, 115,  34]],\n",
       " \n",
       "        [[ 99,  89,  16],\n",
       "         [102,  88,  15],\n",
       "         [ 90,  84,  15],\n",
       "         ...,\n",
       "         [136, 109,  30],\n",
       "         [144, 114,  42],\n",
       "         [156, 118,  55]],\n",
       " \n",
       "        [[ 87,  81,  17],\n",
       "         [ 97,  87,  19],\n",
       "         [ 93,  88,  18],\n",
       "         ...,\n",
       "         [133, 108,  28],\n",
       "         [141, 105,  38],\n",
       "         [146, 106,  42]]], dtype=uint8), array([[[ 76, 139, 212],\n",
       "         [ 77, 138, 213],\n",
       "         [ 77, 138, 213],\n",
       "         ...,\n",
       "         [ 61, 125, 202],\n",
       "         [ 62, 126, 202],\n",
       "         [ 60, 125, 202]],\n",
       " \n",
       "        [[ 77, 139, 213],\n",
       "         [ 75, 139, 212],\n",
       "         [ 79, 139, 215],\n",
       "         ...,\n",
       "         [ 59, 125, 204],\n",
       "         [ 61, 125, 202],\n",
       "         [ 60, 127, 203]],\n",
       " \n",
       "        [[ 78, 140, 213],\n",
       "         [ 75, 141, 212],\n",
       "         [ 77, 140, 214],\n",
       "         ...,\n",
       "         [ 61, 125, 206],\n",
       "         [ 61, 124, 207],\n",
       "         [ 61, 126, 205]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 59,  53,  45],\n",
       "         [ 46,  41,  34],\n",
       "         [ 64,  53,  45],\n",
       "         ...,\n",
       "         [ 57,  68,  54],\n",
       "         [ 73,  89,  71],\n",
       "         [103, 115,  94]],\n",
       " \n",
       "        [[ 72,  61,  51],\n",
       "         [ 81,  86,  75],\n",
       "         [ 81,  81,  75],\n",
       "         ...,\n",
       "         [104,  94,  91],\n",
       "         [136, 118, 108],\n",
       "         [137, 112,  99]],\n",
       " \n",
       "        [[ 75,  61,  54],\n",
       "         [ 99,  86,  87],\n",
       "         [ 90,  84,  88],\n",
       "         ...,\n",
       "         [ 58,  56,  45],\n",
       "         [ 65,  62,  48],\n",
       "         [102,  95,  79]]], dtype=uint8), array([[[164, 177, 229],\n",
       "         [165, 177, 229],\n",
       "         [167, 180, 226],\n",
       "         ...,\n",
       "         [147, 165, 233],\n",
       "         [141, 167, 232],\n",
       "         [141, 167, 233]],\n",
       " \n",
       "        [[167, 179, 226],\n",
       "         [165, 176, 230],\n",
       "         [167, 176, 231],\n",
       "         ...,\n",
       "         [147, 168, 233],\n",
       "         [146, 168, 233],\n",
       "         [144, 166, 233]],\n",
       " \n",
       "        [[169, 176, 229],\n",
       "         [169, 176, 230],\n",
       "         [167, 176, 228],\n",
       "         ...,\n",
       "         [154, 173, 231],\n",
       "         [155, 171, 231],\n",
       "         [149, 167, 233]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[105,  94,  23],\n",
       "         [115,  97,  31],\n",
       "         [106,  95,  32],\n",
       "         ...,\n",
       "         [108,  97,  26],\n",
       "         [101,  97,  23],\n",
       "         [103,  93,  21]],\n",
       " \n",
       "        [[105,  93,  24],\n",
       "         [118,  96,  30],\n",
       "         [112,  95,  30],\n",
       "         ...,\n",
       "         [106,  97,  22],\n",
       "         [109,  99,  26],\n",
       "         [101,  96,  21]],\n",
       " \n",
       "        [[102,  93,  29],\n",
       "         [107,  95,  29],\n",
       "         [103,  95,  25],\n",
       "         ...,\n",
       "         [ 90,  86,  20],\n",
       "         [101,  93,  24],\n",
       "         [ 98,  90,  20]]], dtype=uint8), array([[[254, 254, 254],\n",
       "         [254, 254, 254],\n",
       "         [254, 254, 254],\n",
       "         ...,\n",
       "         [ 26,  23,  21],\n",
       "         [ 32,  33,  32],\n",
       "         [ 45,  45,  45]],\n",
       " \n",
       "        [[254, 254, 254],\n",
       "         [254, 254, 254],\n",
       "         [254, 254, 254],\n",
       "         ...,\n",
       "         [ 33,  26,  23],\n",
       "         [ 25,  25,  23],\n",
       "         [ 37,  35,  30]],\n",
       " \n",
       "        [[254, 254, 254],\n",
       "         [254, 254, 254],\n",
       "         [254, 254, 254],\n",
       "         ...,\n",
       "         [ 30,  27,  21],\n",
       "         [ 29,  25,  25],\n",
       "         [ 34,  28,  23]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 26,  26,  25],\n",
       "         [ 24,  18,  17],\n",
       "         [ 40,  31,  31],\n",
       "         ...,\n",
       "         [108, 105, 102],\n",
       "         [105, 104, 103],\n",
       "         [109, 105, 105]],\n",
       " \n",
       "        [[ 32,  29,  28],\n",
       "         [ 24,  22,  16],\n",
       "         [ 32,  27,  25],\n",
       "         ...,\n",
       "         [112, 106, 109],\n",
       "         [106, 105, 107],\n",
       "         [107, 105, 103]],\n",
       " \n",
       "        [[ 28,  25,  20],\n",
       "         [ 29,  21,  18],\n",
       "         [ 50,  36,  34],\n",
       "         ...,\n",
       "         [103,  99,  99],\n",
       "         [104, 100,  99],\n",
       "         [106, 100, 101]]], dtype=uint8), array([[[ 27,  79, 195],\n",
       "         [ 26,  78, 197],\n",
       "         [ 27,  77, 197],\n",
       "         ...,\n",
       "         [ 30,  89, 205],\n",
       "         [ 29,  86, 204],\n",
       "         [ 29,  88, 205]],\n",
       " \n",
       "        [[ 26,  78, 197],\n",
       "         [ 29,  78, 195],\n",
       "         [ 28,  78, 197],\n",
       "         ...,\n",
       "         [ 29,  90, 205],\n",
       "         [ 30,  85, 206],\n",
       "         [ 30,  87, 205]],\n",
       " \n",
       "        [[ 27,  82, 197],\n",
       "         [ 28,  82, 196],\n",
       "         [ 27,  82, 199],\n",
       "         ...,\n",
       "         [ 29,  89, 206],\n",
       "         [ 30,  89, 206],\n",
       "         [ 30,  89, 206]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[186, 125,  60],\n",
       "         [184, 122,  60],\n",
       "         [185, 123,  61],\n",
       "         ...,\n",
       "         [211, 160,  89],\n",
       "         [213, 162,  94],\n",
       "         [215, 158,  86]],\n",
       " \n",
       "        [[183, 124,  63],\n",
       "         [183, 123,  59],\n",
       "         [188, 122,  56],\n",
       "         ...,\n",
       "         [214, 154,  84],\n",
       "         [213, 155,  86],\n",
       "         [213, 158,  87]],\n",
       " \n",
       "        [[185, 122,  59],\n",
       "         [182, 120,  57],\n",
       "         [178, 119,  59],\n",
       "         ...,\n",
       "         [207, 151,  82],\n",
       "         [209, 152,  78],\n",
       "         [211, 153,  84]]], dtype=uint8)]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "training_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "training_data = np.array(training_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[[[112, 161, 203],\n",
       "         [112, 161, 203],\n",
       "         [114, 162, 203],\n",
       "         ...,\n",
       "         [ 86, 121, 162],\n",
       "         [ 49,  85, 130],\n",
       "         [ 76, 113, 154]],\n",
       "\n",
       "        [[106, 158, 203],\n",
       "         [109, 161, 206],\n",
       "         [113, 162, 203],\n",
       "         ...,\n",
       "         [ 75,  95, 125],\n",
       "         [ 67,  87, 124],\n",
       "         [ 24,  38,  73]],\n",
       "\n",
       "        [[108, 159, 205],\n",
       "         [110, 161, 207],\n",
       "         [114, 162, 204],\n",
       "         ...,\n",
       "         [ 82, 108, 136],\n",
       "         [ 50,  80, 115],\n",
       "         [120, 151, 182]],\n",
       "\n",
       "        ...,\n",
       "\n",
       "        [[127,  77,  72],\n",
       "         [125,  80,  69],\n",
       "         [120,  80,  65],\n",
       "         ...,\n",
       "         [ 67,  28,  35],\n",
       "         [ 56,  29,  29],\n",
       "         [ 56,  30,  34]],\n",
       "\n",
       "        [[134,  85,  84],\n",
       "         [130,  88,  78],\n",
       "         [121,  87,  73],\n",
       "         ...,\n",
       "         [ 45,  23,  32],\n",
       "         [ 37,  18,  28],\n",
       "         [ 26,  23,  31]],\n",
       "\n",
       "        [[128,  79,  74],\n",
       "         [127,  84,  77],\n",
       "         [121,  83,  75],\n",
       "         ...,\n",
       "         [ 23,  14,  31],\n",
       "         [ 32,  20,  36],\n",
       "         [ 19,  17,  32]]],\n",
       "\n",
       "\n",
       "       [[[140, 132,  11],\n",
       "         [113, 109,   0],\n",
       "         [137, 138,  71],\n",
       "         ...,\n",
       "         [144, 208, 255],\n",
       "         [144, 208, 254],\n",
       "         [144, 209, 254]],\n",
       "\n",
       "        [[168, 160,  12],\n",
       "         [143, 135,  10],\n",
       "         [180, 179, 102],\n",
       "         ...,\n",
       "         [145, 207, 255],\n",
       "         [145, 207, 254],\n",
       "         [145, 209, 254]],\n",
       "\n",
       "        [[141, 136,   3],\n",
       "         [ 94,  98,   3],\n",
       "         [121, 110,  58],\n",
       "         ...,\n",
       "         [146, 208, 254],\n",
       "         [145, 208, 254],\n",
       "         [146, 209, 254]],\n",
       "\n",
       "        ...,\n",
       "\n",
       "        [[ 19,  20,  16],\n",
       "         [ 12,  17,  11],\n",
       "         [ 15,  10,  10],\n",
       "         ...,\n",
       "         [ 56,  39,  22],\n",
       "         [ 42,  28,  15],\n",
       "         [ 52,  28,  16]],\n",
       "\n",
       "        [[ 18,  21,  10],\n",
       "         [ 11,  15,   6],\n",
       "         [ 10,   6,   9],\n",
       "         ...,\n",
       "         [ 58,  35,  18],\n",
       "         [ 50,  25,  16],\n",
       "         [ 54,  30,  18]],\n",
       "\n",
       "        [[ 14,  16,   9],\n",
       "         [ 11,  13,   8],\n",
       "         [  7,   7,   8],\n",
       "         ...,\n",
       "         [ 46,  32,  16],\n",
       "         [ 51,  31,  16],\n",
       "         [ 52,  31,  16]]],\n",
       "\n",
       "\n",
       "       [[[107, 137, 231],\n",
       "         [106, 138, 231],\n",
       "         [110, 135, 233],\n",
       "         ...,\n",
       "         [172, 181, 233],\n",
       "         [175, 183, 233],\n",
       "         [175, 182, 233]],\n",
       "\n",
       "        [[110, 134, 233],\n",
       "         [106, 137, 231],\n",
       "         [108, 137, 231],\n",
       "         ...,\n",
       "         [173, 183, 233],\n",
       "         [175, 185, 233],\n",
       "         [176, 186, 233]],\n",
       "\n",
       "        [[107, 136, 233],\n",
       "         [106, 138, 231],\n",
       "         [106, 136, 232],\n",
       "         ...,\n",
       "         [178, 183, 233],\n",
       "         [178, 185, 233],\n",
       "         [177, 185, 233]],\n",
       "\n",
       "        ...,\n",
       "\n",
       "        [[ 93,  84,  14],\n",
       "         [102,  92,  20],\n",
       "         [ 82,  81,  13],\n",
       "         ...,\n",
       "         [133, 110,  32],\n",
       "         [136, 111,  33],\n",
       "         [136, 115,  34]],\n",
       "\n",
       "        [[ 99,  89,  16],\n",
       "         [102,  88,  15],\n",
       "         [ 90,  84,  15],\n",
       "         ...,\n",
       "         [136, 109,  30],\n",
       "         [144, 114,  42],\n",
       "         [156, 118,  55]],\n",
       "\n",
       "        [[ 87,  81,  17],\n",
       "         [ 97,  87,  19],\n",
       "         [ 93,  88,  18],\n",
       "         ...,\n",
       "         [133, 108,  28],\n",
       "         [141, 105,  38],\n",
       "         [146, 106,  42]]],\n",
       "\n",
       "\n",
       "       ...,\n",
       "\n",
       "\n",
       "       [[[164, 177, 229],\n",
       "         [165, 177, 229],\n",
       "         [167, 180, 226],\n",
       "         ...,\n",
       "         [147, 165, 233],\n",
       "         [141, 167, 232],\n",
       "         [141, 167, 233]],\n",
       "\n",
       "        [[167, 179, 226],\n",
       "         [165, 176, 230],\n",
       "         [167, 176, 231],\n",
       "         ...,\n",
       "         [147, 168, 233],\n",
       "         [146, 168, 233],\n",
       "         [144, 166, 233]],\n",
       "\n",
       "        [[169, 176, 229],\n",
       "         [169, 176, 230],\n",
       "         [167, 176, 228],\n",
       "         ...,\n",
       "         [154, 173, 231],\n",
       "         [155, 171, 231],\n",
       "         [149, 167, 233]],\n",
       "\n",
       "        ...,\n",
       "\n",
       "        [[105,  94,  23],\n",
       "         [115,  97,  31],\n",
       "         [106,  95,  32],\n",
       "         ...,\n",
       "         [108,  97,  26],\n",
       "         [101,  97,  23],\n",
       "         [103,  93,  21]],\n",
       "\n",
       "        [[105,  93,  24],\n",
       "         [118,  96,  30],\n",
       "         [112,  95,  30],\n",
       "         ...,\n",
       "         [106,  97,  22],\n",
       "         [109,  99,  26],\n",
       "         [101,  96,  21]],\n",
       "\n",
       "        [[102,  93,  29],\n",
       "         [107,  95,  29],\n",
       "         [103,  95,  25],\n",
       "         ...,\n",
       "         [ 90,  86,  20],\n",
       "         [101,  93,  24],\n",
       "         [ 98,  90,  20]]],\n",
       "\n",
       "\n",
       "       [[[254, 254, 254],\n",
       "         [254, 254, 254],\n",
       "         [254, 254, 254],\n",
       "         ...,\n",
       "         [ 26,  23,  21],\n",
       "         [ 32,  33,  32],\n",
       "         [ 45,  45,  45]],\n",
       "\n",
       "        [[254, 254, 254],\n",
       "         [254, 254, 254],\n",
       "         [254, 254, 254],\n",
       "         ...,\n",
       "         [ 33,  26,  23],\n",
       "         [ 25,  25,  23],\n",
       "         [ 37,  35,  30]],\n",
       "\n",
       "        [[254, 254, 254],\n",
       "         [254, 254, 254],\n",
       "         [254, 254, 254],\n",
       "         ...,\n",
       "         [ 30,  27,  21],\n",
       "         [ 29,  25,  25],\n",
       "         [ 34,  28,  23]],\n",
       "\n",
       "        ...,\n",
       "\n",
       "        [[ 26,  26,  25],\n",
       "         [ 24,  18,  17],\n",
       "         [ 40,  31,  31],\n",
       "         ...,\n",
       "         [108, 105, 102],\n",
       "         [105, 104, 103],\n",
       "         [109, 105, 105]],\n",
       "\n",
       "        [[ 32,  29,  28],\n",
       "         [ 24,  22,  16],\n",
       "         [ 32,  27,  25],\n",
       "         ...,\n",
       "         [112, 106, 109],\n",
       "         [106, 105, 107],\n",
       "         [107, 105, 103]],\n",
       "\n",
       "        [[ 28,  25,  20],\n",
       "         [ 29,  21,  18],\n",
       "         [ 50,  36,  34],\n",
       "         ...,\n",
       "         [103,  99,  99],\n",
       "         [104, 100,  99],\n",
       "         [106, 100, 101]]],\n",
       "\n",
       "\n",
       "       [[[ 27,  79, 195],\n",
       "         [ 26,  78, 197],\n",
       "         [ 27,  77, 197],\n",
       "         ...,\n",
       "         [ 30,  89, 205],\n",
       "         [ 29,  86, 204],\n",
       "         [ 29,  88, 205]],\n",
       "\n",
       "        [[ 26,  78, 197],\n",
       "         [ 29,  78, 195],\n",
       "         [ 28,  78, 197],\n",
       "         ...,\n",
       "         [ 29,  90, 205],\n",
       "         [ 30,  85, 206],\n",
       "         [ 30,  87, 205]],\n",
       "\n",
       "        [[ 27,  82, 197],\n",
       "         [ 28,  82, 196],\n",
       "         [ 27,  82, 199],\n",
       "         ...,\n",
       "         [ 29,  89, 206],\n",
       "         [ 30,  89, 206],\n",
       "         [ 30,  89, 206]],\n",
       "\n",
       "        ...,\n",
       "\n",
       "        [[186, 125,  60],\n",
       "         [184, 122,  60],\n",
       "         [185, 123,  61],\n",
       "         ...,\n",
       "         [211, 160,  89],\n",
       "         [213, 162,  94],\n",
       "         [215, 158,  86]],\n",
       "\n",
       "        [[183, 124,  63],\n",
       "         [183, 123,  59],\n",
       "         [188, 122,  56],\n",
       "         ...,\n",
       "         [214, 154,  84],\n",
       "         [213, 155,  86],\n",
       "         [213, 158,  87]],\n",
       "\n",
       "        [[185, 122,  59],\n",
       "         [182, 120,  57],\n",
       "         [178, 119,  59],\n",
       "         ...,\n",
       "         [207, 151,  82],\n",
       "         [209, 152,  78],\n",
       "         [211, 153,  84]]]], dtype=uint8)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "training_data\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saving training image binary...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "print(\"Saving training image binary...\")\n",
    "np.save(\"training\",training_data) \n",
    "print(\"Done.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
